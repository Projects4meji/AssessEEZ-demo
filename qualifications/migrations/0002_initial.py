# Generated by Django 5.0.7 on 2025-05-17 08:25

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('qualifications', '0001_initial'),
        ('users', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='assessor',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessor_assignments', to='users.userbusiness'),
        ),
        migrations.AddField(
            model_name='eqa',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='eqa_assignments', to='users.userbusiness'),
        ),
        migrations.AddField(
            model_name='evidencesubmission',
            name='assessment_criterion',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evidence_submissions', to='qualifications.ac'),
        ),
        migrations.AddField(
            model_name='evidencesubmission',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evidence_submissions', to='users.userbusiness'),
        ),
        migrations.AddField(
            model_name='evidencefile',
            name='evidence_submission',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='qualifications.evidencesubmission'),
        ),
        migrations.AddField(
            model_name='feedback',
            name='assessor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='given_feedbacks', to='users.userbusiness'),
        ),
        migrations.AddField(
            model_name='feedback',
            name='evidence_submission',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedbacks', to='qualifications.evidencesubmission'),
        ),
        migrations.AddField(
            model_name='iqa',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='iqa_assignments', to='users.userbusiness'),
        ),
        migrations.AddField(
            model_name='iqadocumentremark',
            name='iqa',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='iqa_document_remarks', to='users.userbusiness'),
        ),
        migrations.AddField(
            model_name='iqafeedback',
            name='assessor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='iqa_feedbacks_received', to='users.userbusiness'),
        ),
        migrations.AddField(
            model_name='iqafeedbacktoassessor',
            name='assessor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='iqa_assessor_feedbacks_received', to='users.userbusiness'),
        ),
        migrations.AddField(
            model_name='iqafeedbacktoassessor',
            name='iqa',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='iqa_feedbacks_given', to='users.userbusiness'),
        ),
        migrations.AddField(
            model_name='learner',
            name='assessor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_learners_as_assessor', to='users.userbusiness', verbose_name='Assigned Assessor'),
        ),
        migrations.AddField(
            model_name='learner',
            name='iqa',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_learners_as_iqa', to='users.userbusiness', verbose_name='Assigned IQA'),
        ),
        migrations.AddField(
            model_name='learner',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='learner_assignments', to='users.userbusiness'),
        ),
        migrations.AddField(
            model_name='eqa',
            name='learners',
            field=models.ManyToManyField(blank=True, related_name='eqas', to='qualifications.learner'),
        ),
        migrations.AddField(
            model_name='learnerdocsbyassessor',
            name='learner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessor_documents', to='qualifications.learner'),
        ),
        migrations.AddField(
            model_name='learnerdocsbyassessor',
            name='uploaded_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='uploaded_documents', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='learnerdocumentsubmission',
            name='assessor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='document_reviews', to='users.userbusiness'),
        ),
        migrations.AddField(
            model_name='learnerdocumentsubmission',
            name='document_requirement',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='qualifications.documentrequirement'),
        ),
        migrations.AddField(
            model_name='learnerdocumentsubmission',
            name='learner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='document_submissions', to='qualifications.learner'),
        ),
        migrations.AddField(
            model_name='iqadocumentremark',
            name='submission',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='iqa_remarks', to='qualifications.learnerdocumentsubmission'),
        ),
        migrations.AddField(
            model_name='ac',
            name='learning_outcome',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessment_criteria', to='qualifications.lo'),
        ),
        migrations.AddField(
            model_name='message',
            name='sender',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to='users.userbusiness'),
        ),
        migrations.AddField(
            model_name='messagerecipient',
            name='message',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipients', to='qualifications.message'),
        ),
        migrations.AddField(
            model_name='messagerecipient',
            name='recipient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to='users.userbusiness'),
        ),
        migrations.AddField(
            model_name='notification',
            name='evidence_submission',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='qualifications.evidencesubmission'),
        ),
        migrations.AddField(
            model_name='notification',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='users.userbusiness'),
        ),
        migrations.AddField(
            model_name='qual',
            name='business',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='qualifications', to='users.business'),
        ),
        migrations.AddField(
            model_name='message',
            name='qualification',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='qualifications.qual'),
        ),
        migrations.AddField(
            model_name='learner',
            name='qualification',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='learners', to='qualifications.qual'),
        ),
        migrations.AddField(
            model_name='iqa',
            name='qualification',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='iqas', to='qualifications.qual'),
        ),
        migrations.AddField(
            model_name='eqa',
            name='qualification',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='eqas', to='qualifications.qual'),
        ),
        migrations.AddField(
            model_name='documentrequirement',
            name='qualification',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='document_requirements', to='qualifications.qual'),
        ),
        migrations.AddField(
            model_name='assessor',
            name='qualification',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessors', to='qualifications.qual'),
        ),
        migrations.AddField(
            model_name='resourcefolder',
            name='business',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resource_folders', to='users.business'),
        ),
        migrations.AddField(
            model_name='resourcefolder',
            name='qualifications',
            field=models.ManyToManyField(related_name='resource_folders', to='qualifications.qual'),
        ),
        migrations.AddField(
            model_name='resourcefile',
            name='folder',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='qualifications.resourcefolder'),
        ),
        migrations.AddField(
            model_name='sampling',
            name='evidence_submission',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='samplings', to='qualifications.evidencesubmission'),
        ),
        migrations.AddField(
            model_name='sampling',
            name='iqa',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='samplings', to='users.userbusiness'),
        ),
        migrations.AddField(
            model_name='iqafeedback',
            name='sampling',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='iqa_feedbacks', to='qualifications.sampling'),
        ),
        migrations.AddField(
            model_name='unit',
            name='qualification',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='units', to='qualifications.qual'),
        ),
        migrations.AddField(
            model_name='lo',
            name='unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='learning_outcomes', to='qualifications.unit'),
        ),
        migrations.AddIndex(
            model_name='evidencesubmission',
            index=models.Index(fields=['user'], name='idx_evidence_user'),
        ),
        migrations.AddIndex(
            model_name='evidencesubmission',
            index=models.Index(fields=['assessment_criterion'], name='idx_evidence_ac'),
        ),
        migrations.AddIndex(
            model_name='evidencefile',
            index=models.Index(fields=['evidence_submission'], name='idx_evidence_file_submission'),
        ),
        migrations.AddIndex(
            model_name='feedback',
            index=models.Index(fields=['evidence_submission'], name='idx_feedback_evidence'),
        ),
        migrations.AddIndex(
            model_name='feedback',
            index=models.Index(fields=['assessor'], name='idx_feedback_assessor'),
        ),
        migrations.AddIndex(
            model_name='iqafeedbacktoassessor',
            index=models.Index(fields=['iqa'], name='idx_iqa_feedback_iqa'),
        ),
        migrations.AddIndex(
            model_name='iqafeedbacktoassessor',
            index=models.Index(fields=['assessor'], name='idx_iqa_feedback_to_assessor'),
        ),
        migrations.AddIndex(
            model_name='iqafeedbacktoassessor',
            index=models.Index(fields=['created_at'], name='idx_iqa_feedback_created_at'),
        ),
        migrations.AddConstraint(
            model_name='learnerdocumentsubmission',
            constraint=models.UniqueConstraint(fields=('learner', 'document_requirement'), name='unique_learner_doc_submission'),
        ),
        migrations.AddIndex(
            model_name='iqadocumentremark',
            index=models.Index(fields=['submission'], name='idx_iqa_remark_submission'),
        ),
        migrations.AddIndex(
            model_name='iqadocumentremark',
            index=models.Index(fields=['iqa'], name='idx_iqa_remark_iqa'),
        ),
        migrations.AddConstraint(
            model_name='iqadocumentremark',
            constraint=models.UniqueConstraint(fields=('submission', 'iqa'), name='unique_iqa_submission_remark'),
        ),
        migrations.AddIndex(
            model_name='ac',
            index=models.Index(fields=['learning_outcome'], name='idx_ac_learning_outcome'),
        ),
        migrations.AddConstraint(
            model_name='ac',
            constraint=models.UniqueConstraint(fields=('ac_detail', 'learning_outcome'), name='unique_ac_detail_per_lo'),
        ),
        migrations.AlterUniqueTogether(
            name='messagerecipient',
            unique_together={('message', 'recipient')},
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['user'], name='idx_notification_user'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['evidence_submission'], name='idx_notification_submission'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['is_read'], name='idx_notification_is_read'),
        ),
        migrations.AddIndex(
            model_name='qual',
            index=models.Index(fields=['qualification_number'], name='idx_qualification_number'),
        ),
        migrations.AddIndex(
            model_name='qual',
            index=models.Index(fields=['business'], name='idx_qualification_business'),
        ),
        migrations.AddIndex(
            model_name='learner',
            index=models.Index(fields=['user'], name='idx_learner_user'),
        ),
        migrations.AddIndex(
            model_name='learner',
            index=models.Index(fields=['qualification'], name='idx_learner_qualification'),
        ),
        migrations.AddIndex(
            model_name='learner',
            index=models.Index(fields=['assessor'], name='idx_learner_assessor'),
        ),
        migrations.AddIndex(
            model_name='learner',
            index=models.Index(fields=['iqa'], name='idx_learner_iqa'),
        ),
        migrations.AddIndex(
            model_name='learner',
            index=models.Index(fields=['is_active'], name='idx_learner_is_active'),
        ),
        migrations.AddIndex(
            model_name='learner',
            index=models.Index(fields=['batch_number'], name='idx_learner_batch_number'),
        ),
        migrations.AddConstraint(
            model_name='learner',
            constraint=models.UniqueConstraint(fields=('user', 'qualification'), name='unique_learner_qualification'),
        ),
        migrations.AddIndex(
            model_name='iqa',
            index=models.Index(fields=['user'], name='idx_iqa_user'),
        ),
        migrations.AddIndex(
            model_name='iqa',
            index=models.Index(fields=['qualification'], name='idx_iqa_qualification'),
        ),
        migrations.AddConstraint(
            model_name='iqa',
            constraint=models.UniqueConstraint(fields=('user', 'qualification'), name='unique_iqa_qualification'),
        ),
        migrations.AddIndex(
            model_name='eqa',
            index=models.Index(fields=['user'], name='idx_eqa_user'),
        ),
        migrations.AddIndex(
            model_name='eqa',
            index=models.Index(fields=['qualification'], name='idx_eqa_qualification'),
        ),
        migrations.AddConstraint(
            model_name='eqa',
            constraint=models.UniqueConstraint(fields=('user', 'qualification'), name='unique_eqa_qualification'),
        ),
        migrations.AddIndex(
            model_name='documentrequirement',
            index=models.Index(fields=['qualification'], name='idx_doc_req_qual'),
        ),
        migrations.AddIndex(
            model_name='assessor',
            index=models.Index(fields=['user'], name='idx_assessor_user'),
        ),
        migrations.AddIndex(
            model_name='assessor',
            index=models.Index(fields=['qualification'], name='idx_assessor_qualification'),
        ),
        migrations.AddConstraint(
            model_name='assessor',
            constraint=models.UniqueConstraint(fields=('user', 'qualification'), name='unique_assessor_qualification'),
        ),
        migrations.AddIndex(
            model_name='resourcefolder',
            index=models.Index(fields=['business'], name='idx_resource_folder_business'),
        ),
        migrations.AddIndex(
            model_name='resourcefile',
            index=models.Index(fields=['folder'], name='idx_resource_file_folder'),
        ),
        migrations.AddIndex(
            model_name='sampling',
            index=models.Index(fields=['evidence_submission'], name='idx_sampling_evidence'),
        ),
        migrations.AddIndex(
            model_name='sampling',
            index=models.Index(fields=['iqa'], name='idx_sampling_iqa'),
        ),
        migrations.AddIndex(
            model_name='iqafeedback',
            index=models.Index(fields=['sampling'], name='idx_iqa_feedback_sampling'),
        ),
        migrations.AddIndex(
            model_name='iqafeedback',
            index=models.Index(fields=['assessor'], name='idx_iqa_feedback_assessor'),
        ),
        migrations.AddIndex(
            model_name='unit',
            index=models.Index(fields=['unit_number'], name='idx_unit_number'),
        ),
        migrations.AddIndex(
            model_name='unit',
            index=models.Index(fields=['qualification'], name='idx_unit_qualification'),
        ),
        migrations.AddConstraint(
            model_name='unit',
            constraint=models.UniqueConstraint(fields=('unit_number', 'qualification'), name='unique_unit_number_per_qualification'),
        ),
        migrations.AddIndex(
            model_name='lo',
            index=models.Index(fields=['unit'], name='idx_lo_unit'),
        ),
        migrations.AddConstraint(
            model_name='lo',
            constraint=models.UniqueConstraint(fields=('lo_detail', 'unit'), name='unique_lo_detail_per_unit'),
        ),
    ]
